{"version":3,"sources":["logo.svg","components/table/table.jsx","components/search-box/search-box.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","BookTable","props","Table","hover","books","length","map","book","key","id","title","author","gender","year","onClick","editRow","className","style","cursor","deleteBook","colSpan","SearchBox","placeholder","handleChange","type","onChange","App","useState","setBooks","allBooks","setAllBooks","undefined","saveForm","setSaveForm","saveModal","setSaveModal","isEdit","setIsEdit","loading","setLoading","changeForm","value","form","saveBook","a","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","text","console","log","setTimeout","findAll","err","onToggle","res","json","result","error","searchField","useEffect","Container","Navbar","Row","Col","e","target","filteredBooks","filter","toLowerCase","includes","Button","color","size","Modal","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","width","height","display","justifyContent","alignItems","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6956152b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.65342370.svg\";","import React from 'react'\r\nimport { Table } from 'reactstrap';\r\nimport {Edit, Trash} from 'react-feather';\r\n\r\nconst BookTable = props => (\r\n  <Table hover>\r\n    <thead>\r\n      <tr>\r\n        <th>#</th>\r\n        <th>Título</th>\r\n        <th>Autor</th>\r\n        <th>Gênero</th>\r\n        <th>Ano</th>\r\n        <th>Ações</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {props.books.length > 0 ? (\r\n        props.books.map(book => (\r\n          <tr key={book.id}>\r\n            <td>{book.id}</td>\r\n            <td>{book.title}</td>\r\n            <td>{book.author}</td>\r\n            <td>{book.gender}</td>\r\n            <td>{book.year}</td>\r\n            <td>\r\n              <Edit\r\n                onClick={() => {\r\n                  props.editRow(book)\r\n                }}\r\n                className=\"button muted-button\"\r\n                style={{cursor: \"pointer\"}}\r\n              />\r\n              <Trash\r\n                onClick={() => props.deleteBook(book.id)}\r\n                className=\"button muted-button\"\r\n                style={{cursor: \"pointer\"}}\r\n              />\r\n            </td>\r\n          </tr>\r\n        ))\r\n      ) : (\r\n        <tr>\r\n          <td colSpan={6}>Nenhum livro encontrado</td>\r\n        </tr>\r\n      )}\r\n    </tbody>\r\n  </Table>\r\n)\r\n\r\nexport default BookTable","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n\r\n    <input \r\n        className='search'\r\n        type=\"search\" \r\n        placeholder={placeholder} \r\n        onChange={handleChange} \r\n    />\r\n);","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport BookTable from './components/table/table'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Container, Row, Col, Navbar } from 'reactstrap';\nimport { SearchBox } from './components/search-box/search-box'\nimport logo from './logo.svg'\nimport Loader from 'react-loader-spinner';\n\nfunction App() {\n\n  const [books, setBooks] = useState([]);\n  const [allBooks, setAllBooks] = useState([]);\n  const [saveForm, setSaveForm] = useState ({\n    title: undefined,\n    author: undefined,\n    gender: undefined,\n    year: undefined,\n  });\n  const [saveModal, setSaveModal] = useState (false);\n  const [isEdit, setIsEdit] = useState (false);\n  const [loading, setLoading] = useState (false);\n  \n\n\n\n  const changeForm = (key, value) => {\n    let form = {...saveForm};\n    form[key] = value;\n    setSaveForm (form);\n  };\n  const saveBook = async () => {    \n      try {\n        if (isEdit) {\n          setLoading(true)\n          const book = {\n            title: saveForm.title,\n            author: saveForm.author,\n            gender: saveForm.gender,\n            year: saveForm.year,\n          };\n            const requestOptions = {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(book)\n            };\n            fetch(`https://library-arthur.herokuapp.com/books/${saveForm.id}`, requestOptions)\n                .then(response => response.text())\n                .then(console.log('ok', 'response'));\n            setIsEdit (false);\n            setSaveModal(false);\n            setTimeout(() => { \n              findAll() \n              setLoading(false)\n            }, 500);\n            setSaveForm({\n              id: undefined,\n              title: undefined,\n              author: undefined,\n              gender: undefined,\n              year: undefined,\n            });\n\n        } else {\n            setLoading(true)\n            const book = {\n                title: saveForm.title,\n                author: saveForm.author,\n                gender: saveForm.gender,\n                year: saveForm.year,\n              };\n                const requestOptions = {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(book)\n                };\n                fetch('https://library-arthur.herokuapp.com/books', requestOptions)\n                    .then(response => response.text())\n                    .then(console.log('ok'));\n          setSaveModal(false);          \n          setTimeout(() => { \n            findAll() \n            setLoading(false)\n          }, 500);\n        }\n      } catch (err) {\n        console.log ('error:', err);\n      }\n  };\n\n  const onToggle = () => {\n    setSaveModal (!saveModal);\n    setIsEdit (false);\n  };\n\n  const findAll = async () => {\n    fetch(\"https://library-arthur.herokuapp.com/books\")\n    .then(res => res.json())\n    .then(\n      (result) => {\n        console.log('aaa',result)\n        setBooks([...result]);\n        setAllBooks(result);\n        \n      },\n      (error) => {\n        console.log('error', error)  \n      }\n    )\n  }\n\n  const deleteBook = async id => {\n    setLoading(true)\n    fetch(`https://library-arthur.herokuapp.com/books/${id}`, {\n      method: 'DELETE',\n    })\n    .then(res => res.text())\n    .then(res => console.log(res))\n    setTimeout(() => { \n      findAll() \n      setLoading(false)\n    }, 500);\n  }\n  \n  const editRow = book => {\n    setSaveModal(true)\n    setIsEdit(true)\n\t\tsetSaveForm({\n      id:book.id, \n      title: book.title,\n      author: book.author,\n      gender: book.gender,\n      year: book.year,\n    })\n  }\n\n  let searchField = '';\n  const handleChange =  e => {\n    searchField = e.target.value;\n    const filteredBooks = allBooks.filter( book =>\n      book.title.toLowerCase().includes(searchField.toLowerCase())\n    );\n    if(searchField && searchField !== ''){\n      setBooks(filteredBooks);\n    }else{\n      findAll();\n    }\n  }\n\n  useEffect(() => {\n    findAll();\n  }, [])\n\n\n  return (\n    <div>\n\n    <Container>\n      <Navbar className=\"navbar text-white\">{'Biblioteca'}\n      </Navbar>\n      <Row>\n       <Col> \n        <SearchBox placeholder='Procurar Livro' handleChange={ handleChange } ></SearchBox>\n        </Col>\n      <Col className='text-right btnSave' >\n      <Button color=\"secondary\" size=\"sm\" onClick={() => setSaveModal (true)} >{('Novo Livro')}</Button>\n      </Col>\n      </Row> \n      <BookTable books={books} deleteBook={deleteBook} editRow={editRow}/>\n      </Container>\n      <Modal isOpen={saveModal} toggle={onToggle}>\n        <ModalHeader toggle={onToggle}>{'Salvar Livro'}</ModalHeader>\n        <ModalBody>\n          <form>\n            <div className=\"form-group\">\n              <label>Título</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Título\"\n                value={saveForm.title}\n                onChange={e => changeForm ('title', e.target.value)}\n              />\n              <label>Autor</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Autor\"\n                value={saveForm.author}\n                onChange={e => changeForm ('author', e.target.value)}\n              />\n              <label>Gênero</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Gênero\"\n                value={saveForm.gender}\n                onChange={e => changeForm ('gender', e.target.value)}\n              />\n              <label>Ano</label>\n              <input\n                className=\"form-control\"\n                type=\"number\"\n                placeholder=\"Ano\"\n                value={saveForm.year}\n                onChange={e => changeForm ('year', e.target.value)}\n              />              \n            </div>\n          </form>\n        </ModalBody>\n\n        <ModalFooter>\n          <Button color=\"primary\" onClick={saveBook}>Salvar</Button>\n          <Button color=\"secondary\" onClick={onToggle}>Cancelar</Button>\n        </ModalFooter>\n      </Modal>\n      { loading ? (      \n      <div style={{width: \"100%\",height: \"100\",display: \"flex\",justifyContent: \"center\",alignItems: \"center\"}}>\n        <Loader type=\"ThreeDots\" color=\"rgb(58, 70, 99);\" height=\"50\" width=\"50\" />\n      </div>) : null\n      }\n    </div>\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}